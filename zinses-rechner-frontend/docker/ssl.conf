# SSL/TLS 配置文件
# 现代化的SSL配置，符合德国安全标准

# ================================
# SSL协议和密码套件
# ================================

# 仅支持现代TLS版本
ssl_protocols TLSv1.2 TLSv1.3;

# 优先使用服务器密码套件
ssl_prefer_server_ciphers on;

# 现代化密码套件（支持TLS 1.2和1.3）
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

# TLS 1.3 密码套件
ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;

# ================================
# SSL会话设置
# ================================

# SSL会话缓存
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

# SSL会话票据
ssl_session_tickets off;

# ================================
# OCSP装订
# ================================

# 启用OCSP装订
ssl_stapling on;
ssl_stapling_verify on;

# OCSP解析器（使用德国DNS服务器）
resolver 8.8.8.8 8.8.4.4 1.1.1.1 valid=300s;
resolver_timeout 5s;

# ================================
# Diffie-Hellman参数
# ================================

# DH参数文件（需要预先生成）
# ssl_dhparam /etc/nginx/ssl/dhparam.pem;

# ================================
# SSL缓冲区优化
# ================================

# SSL缓冲区大小
ssl_buffer_size 4k;

# ================================
# 早期数据（0-RTT）设置
# ================================

# TLS 1.3 早期数据支持（谨慎使用）
# ssl_early_data on;

# ================================
# SSL证书配置示例
# ================================

# 主证书（在server块中设置）
# ssl_certificate /etc/nginx/ssl/cert.pem;
# ssl_certificate_key /etc/nginx/ssl/key.pem;

# 中间证书链
# ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

# ================================
# Let's Encrypt证书配置示例
# ================================

# ssl_certificate /etc/letsencrypt/live/zinses-rechner.de/fullchain.pem;
# ssl_certificate_key /etc/letsencrypt/live/zinses-rechner.de/privkey.pem;
# ssl_trusted_certificate /etc/letsencrypt/live/zinses-rechner.de/chain.pem;

# ================================
# SSL日志记录
# ================================

# SSL错误日志
# error_log /var/log/nginx/ssl_error.log;

# ================================
# 客户端证书验证（可选）
# ================================

# 客户端证书验证
# ssl_client_certificate /etc/nginx/ssl/ca.pem;
# ssl_verify_client optional;

# ================================
# SSL性能优化
# ================================

# 工作进程SSL设置
# worker_rlimit_nofile 65535;

# ================================
# 安全头（SSL特定）
# ================================

# HSTS头（在security-headers.conf中已设置）
# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# ================================
# SSL测试和调试
# ================================

# SSL调试（仅在开发环境使用）
# ssl_verify_depth 2;
# error_log /var/log/nginx/ssl_debug.log debug;

# ================================
# 生成DH参数的命令
# ================================
# openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048

# ================================
# SSL证书生成示例（自签名，仅用于测试）
# ================================
# openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
#   -keyout /etc/nginx/ssl/key.pem \
#   -out /etc/nginx/ssl/cert.pem \
#   -subj "/C=DE/ST=Bavaria/L=Munich/O=Zinses Rechner/CN=localhost"

# ================================
# Let's Encrypt证书获取命令
# ================================
# certbot certonly --webroot -w /usr/share/nginx/html \
#   -d zinses-rechner.de -d www.zinses-rechner.de \
#   --email admin@zinses-rechner.de --agree-tos --no-eff-email

# ================================
# SSL配置测试
# ================================
# 使用以下工具测试SSL配置：
# - SSL Labs: https://www.ssllabs.com/ssltest/
# - testssl.sh: https://testssl.sh/
# - Mozilla Observatory: https://observatory.mozilla.org/
