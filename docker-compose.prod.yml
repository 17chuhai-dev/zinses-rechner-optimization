# 生产环境配置
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  frontend:
    build:
      target: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=https://api.zinses-rechner.de
      - VITE_ENABLE_ANALYTICS=true
      - VITE_ENABLE_PERFORMANCE_MONITORING=true
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  backend:
    build:
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      - ALLOWED_ORIGINS=https://zinses-rechner.de,https://www.zinses-rechner.de
      - ALLOWED_HOSTS=api.zinses-rechner.de,backend
    command: ["gunicorn", "app.main:app", "-c", "gunicorn.conf.py"]
    restart: always
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  redis:
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # 生产环境监控
  prometheus:
    image: prom/prometheus:latest
    container_name: zinses-rechner-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - zinses-rechner-network
    restart: always
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: zinses-rechner-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - zinses-rechner-network
    restart: always
    profiles:
      - monitoring

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
